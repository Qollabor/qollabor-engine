akka {
  loglevel = DEBUG
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  log-dead-letters = 30
  log-dead-letters-during-shutdown = on

  actor {
    serialize-messages = on

    serializers {
      qollabor_serializer = "org.qollabor.akka.actor.serialization.QollaborSerializer"

      # TestSerializer for internal TestScript framework
      testserializer = "org.qollabor.cmmn.test.TestSerializer"
    }
    serialization-bindings {
      "org.qollabor.akka.actor.serialization.QollaborSerializable" = qollabor_serializer

      # TestSerializer on TestCommands
      "org.qollabor.cmmn.test.CaseTestCommand" = testserializer
      "org.qollabor.cmmn.test.PingCommand" = testserializer
    }
  } # actor

  persistence {
    journal {
      # Using Dennis Vriend in-mem journal
      plugin = "inmemory-journal"
    }

    snapshot-store {
      plugin = "inmemory-snapshot-store"
    }
  }# persistence
}# akka

qollabor {
  # Platform has owners that are allowed to create/disable/enable tenants
  #  This property specifies the set of user-id's that are owners
  #  This array may not be empty.
  platform {
    owners = ["admin"]
  }

  definitions {
    provider = "org.qollabor.cmmn.repository.file.FileBasedDefinitionProvider"
    location = "./definitions"
    cache {
      size = 100
    }
  }
  actor {
    # the seconds of idle time after which a case actor is removed from akka memory
    # if the case has not received new commands after the specified number of seconds,
    # the case engine will ask akka to remove the case from memory to avoid memory leaks.
    idleperiod = 60
  }

  # This setting tells qollabor which journal to use for reading events.
  #  If omitted, qollabor will try to guess the read journal, based on the akka settings
  read-journal = "inmemory-read-journal"

}

inmemory-journal {
  event-adapters {
    tagging = "org.qollabor.akka.actor.tagging.CaseTaggingEventAdapter"
  }

  event-adapter-bindings {
    "org.qollabor.akka.actor.event.ModelEvent" = tagging
  }
}
